'use strict';function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}angular.module('pfTo5eFilters',[]).filter('getByName',function(){return function(input,value){for(var i=0;i<input.length;i+=1){if(input[i].hasOwnProperty('name')){if(input[i].name.toLowerCase().indexOf(value)!==-1){return input[i];}}}return null;};}).filter('hasProp',function(){return function(input,property){var array=[];for(var i=0;i<input.length;i+=1){if(input[i].hasOwnProperty(property)){array.push(input[i]);}}return array;};}).filter('countByHasProp',function(){return function(input,property){var count=0;for(var i=0;i<input.length;i+=1){if(input[i].hasOwnProperty(property)){count+=1;}}return count;};}).filter('countByPropEqual',function(){return function(input,property,value){var count=0;for(var i=0;i<input.length;i+=1){if(input[i][property]===value){count+=1;}}return count;};}).filter('closestValueInArray',function(){return function(array,input){return array.reduce(function(prev,curr){return Math.abs(curr-input)<Math.abs(prev-input)?curr:prev;});};}).filter('objToArrayOfValues',function(){return function(obj,property){var values=[];for(var o in obj){if(property&&obj[o].hasOwnProperty(property)){values.push(obj[o][property]);}else{values.push(obj[o]);}}return values.sort(function(a,b){return a-b;});};}).filter('orderObjectByKey',function(){return function(obj){var keys=Object.keys(obj);var key=void 0;var filtered={};keys.sort();for(var i=0;i<keys.length;i+=1){key=keys[i];filtered[key]=obj[key];}return filtered;};}).filter('numberToWord',function(){return function(number){var word=void 0;if(number===1){word='one';}else if(number===2){word='two';}else if(number===3){word='three';}else if(number===4){word='four';}else if(number===5){word='five';}else if(number===6){word='six';}else if(number===7){word='seven';}else if(number===8){word='eight';}else if(number===9){word='nine';}else if(number===10){word='ten';}else if(number===11){word='eleven';}else if(number===12){word='twelve';}else if(number===13){word='thirteen';}else if(number===14){word='fourteen';}else if(number===15){word='fifteen';}return word;};}).filter('ordinalSuffix',function(){return function(number){var j=number%10;var k=number%100;var ordinalNumber=void 0;if(j===1&&k!==11){ordinalNumber=number+'st';}else if(j===2&&k!==12){ordinalNumber=number+'nd';}else if(j===3&&k!==13){ordinalNumber=number+'rd';}else{ordinalNumber=number+'th';}return ordinalNumber;};}).filter('arithmeticSymbol',function(){return function(number,addSpace){var value=parseInt(number,10);var space='';if(addSpace){space=' ';}if(value>=0){value='+'+space+value;}else{value='\u2013'+space+Math.abs(value);}return value;};});angular.module('pfTo5eSharedProperties',['pfTo5eFilters']).service('sharedProperties',['$filter',function($filter){var properties={};var fiveRange='5/15';var twentyRange='20/60';var twentyFiveRange='25/100';var thirtyRange='30/120';var eightyRange='80/320';var hundredRange='100/400';var onefiftyRange='150/600';properties.alignments=['lg','ln','le','ng','ne','n','cg','cn','ce'];properties.hdBySize={fine:4,diminutive:4,tiny:4,small:6,medium:8,large:10,huge:12,gargantuan:20,colossal:20};properties.sizes=['fine','diminutive','tiny','small','medium','large','huge','gargantuan','colossal'];properties.statsByCR={0:{ac:12,averageHP:3,damagePerRound:0.5,toHit:2},0.125:{ac:13,averageHP:21,damagePerRound:2.5,toHit:3},0.25:{ac:13,averageHP:42,damagePerRound:4.5,toHit:3},0.5:{ac:13,averageHP:60,damagePerRound:7,toHit:3},1:{ac:13,averageHP:78,damagePerRound:11.5,toHit:3},2:{ac:13,averageHP:93,damagePerRound:17.5,toHit:3},3:{ac:13,averageHP:108,damagePerRound:23.5,toHit:4},4:{ac:14,averageHP:123,damagePerRound:29.5,toHit:5},5:{ac:15,averageHP:138,damagePerRound:35.5,toHit:6},6:{ac:15,averageHP:153,damagePerRound:41.5,toHit:6},7:{ac:15,averageHP:165,damagePerRound:47.5,toHit:6},8:{ac:16,averageHP:180,damagePerRound:53.5,toHit:7},9:{ac:16,averageHP:198,damagePerRound:59.5,toHit:7},10:{ac:17,averageHP:213,damagePerRound:65.5,toHit:7},11:{ac:17,averageHP:228,damagePerRound:71.5,toHit:8},12:{ac:17,averageHP:243,damagePerRound:77.5,toHit:8},13:{ac:18,averageHP:258,damagePerRound:83.5,toHit:8},14:{ac:18,averageHP:273,damagePerRound:89.5,toHit:8},15:{ac:18,averageHP:288,damagePerRound:95.5,toHit:8},16:{ac:18,averageHP:303,damagePerRound:101.5,toHit:9},17:{ac:19,averageHP:318,damagePerRound:107.5,toHit:10},18:{ac:19,averageHP:333,damagePerRound:113.5,toHit:10},19:{ac:19,averageHP:348,damagePerRound:119.5,toHit:10},20:{ac:19,averageHP:378,damagePerRound:131.5,toHit:10},21:{ac:19,averageHP:423,damagePerRound:149.5,toHit:11},22:{ac:19,averageHP:468,damagePerRound:167.5,toHit:11},23:{ac:19,averageHP:513,damagePerRound:185.5,toHit:11},24:{ac:19,averageHP:558,damagePerRound:203.5,toHit:12},25:{ac:19,averageHP:603,damagePerRound:221.5,toHit:12},26:{ac:19,averageHP:648,damagePerRound:239.5,toHit:12},27:{ac:19,averageHP:693,damagePerRound:257.5,toHit:13},28:{ac:19,averageHP:738,damagePerRound:275.5,toHit:13},29:{ac:19,averageHP:783,damagePerRound:293.5,toHit:13},30:{ac:19,averageHP:828,damagePerRound:311.5,toHit:14}};properties.crList=$filter('objToArrayOfValues')(Object.keys(properties.statsByCR));properties.oldSkillToNew={acrobatics:'acrobatics',bluff:'deception',climb:'athletics','craft (alchemy)':'alchemist\'s supplies','craft (traps)':'thieves\' tools','craft (trapmaking)':'thieves\' tools',diplomacy:'persuasion','disable device':'thieves\' tools',disguise:'disguise kit',fly:'acrobatics','handle animal':'animal handling',heal:'medicine',intimidate:'intimidation','knowledge (arcana)':'arcana','knowledge (geography)':'nature','knowledge (history)':'history','knowledge (local)':'history','knowledge (nature)':'nature','knowledge (nobility)':'history','knowledge (planes)':'religion','knowledge (religion)':'religion',linguistics:'investigation',perception:'perception',perform:'performance',ride:'animal handling','sense motive':'insight','sleight of hand':'sleight of hand',spellcraft:'arcana',stealth:'stealth',survival:'survival',swim:'athletics'};properties.skillAbility={acrobatics:'dexterity','alchemist\'s supplies':'intelligence','animal handling':'wisdom',arcana:'intelligence',athletics:'strength',deception:'charisma','disguise kit':'charisma',history:'intelligence',insight:'wisdom',intimidation:'charisma',investigation:'intelligence',medicine:'wisdom',nature:'intelligence','navigator\'s tools':'wisdom',perception:'wisdom',performance:'charisma',persuasion:'charisma',religion:'intelligence','sleight of hand':'dexterity',stealth:'dexterity',survival:'wisdom','thieves\' tools':'dexterity'};properties.weapons=[{name:'club',damageDice:1,damageDie:4,damageType:'bludgeoning'},{name:'dagger',thrown:true,range:twentyRange,finesse:true,damageDice:1,damageDie:4,damageType:'piercing'},{name:'greatclub',damageDice:1,damageDie:8,damageType:'bludgeoning'},{name:'handaxe',thrown:true,range:twentyRange,damageDice:1,damageDie:6,damageType:'slashing'},{name:'javelin',thrown:true,range:thirtyRange,damageDice:1,damageDie:6,damageType:'piercing'},{name:'light hammer',thrown:true,range:twentyRange,damageDice:1,damageDie:4,damageType:'bludgeoning'},{name:'mace',damageDice:1,damageDie:6,damageType:'bludgeoning'},{name:'quarterstaff',damageDice:1,damageDie:6,damageType:'bludgeoning',versatile:true},{name:'sickle',damageDice:1,damageDie:4,damageType:'slashing'},{name:'spear',thrown:true,range:twentyRange,damageDice:1,damageDie:6,damageType:'piercing',versatile:true},{name:'light crossbow',range:eightyRange,damageDice:1,damageDie:8,damageType:'piercing'},{name:'dart',thrown:true,range:twentyRange,finesse:true,damageDice:1,damageDie:4,damageType:'piercing'},{name:'shortbow',range:eightyRange,damageDice:1,damageDie:6,damageType:'piercing'},{name:'sling',range:thirtyRange,damageDice:1,damageDie:4,damageType:'bludgeoning'},{name:'battleaxe',damageDice:1,damageDie:8,damageType:'slashing',versatile:true},{name:'flail',damageDice:1,damageDie:8,damageType:'bludgeoning'},{name:'glaive',damageDice:1,damageDie:10,damageType:'slashing'},{name:'greataxe',damageDice:1,damageDie:12,damageType:'slashing'},{name:'halberd',damageDice:1,damageDie:10,damageType:'slashing'},{name:'lance',damageDice:1,damageDie:12,damageType:'piercing'},{name:'longsword',damageDice:1,damageDie:10,damageType:'slashing',versatile:true},{name:'maul',damageDice:2,damageDie:6,damageType:'bludgeoning'},{name:'morningstar',damageDice:1,damageDie:8,damageType:'piercing'},{name:'pike',damageDice:1,damageDie:10,damageType:'piercing'},{name:'rapier',finesse:true,damageDice:1,damageDie:8,damageType:'slashing'},{name:'scimitar',finesse:true,damageDice:1,damageDie:6,damageType:'slashing'},{name:'shortsword',finesse:true,damageDice:1,damageDie:6,damageType:'piercing'},{name:'trident',thrown:true,range:twentyRange,damageDice:1,damageDie:8,damageType:'piercing',versatile:true},{name:'war pick',damageDice:1,damageDie:8,damageType:'piercing'},{name:'warhammer',damageDice:1,damageDie:8,damageType:'bludgeoning',versatile:true},{name:'whip',finesse:true,damageDice:1,damageDie:4,damageType:'slashing'},{name:'blowgun',range:twentyFiveRange,damage:1,damageType:'piercing'},{name:'hand crossbow',range:thirtyRange,damageDice:1,damageDie:6,damageType:'piercing'},{name:'heavy crossbow',range:hundredRange,damageDice:1,damageDie:10,damageType:'piercing'},{name:'longbow',range:onefiftyRange,damageDice:1,damageDie:8,damageType:'piercing'},{name:'net',thrown:true,range:fiveRange,damageDice:1,damageDie:4,damageType:'piercing'},{name:'improvised weapon',damageDice:1,damageDie:4,damageType:'bludgeoning'},{name:'unarmed strike',damageDice:1,damageDie:2,damageType:'bludgeoning'}];properties.spellSlotsByCL={1:{1:2},2:{1:3},3:{1:4,2:2},4:{1:4,2:3},5:{1:4,2:3,3:2},6:{1:4,2:3,3:3},7:{1:4,2:3,3:3,4:1},8:{1:4,2:3,3:3,4:2},9:{1:4,2:3,3:3,4:3,5:1},10:{1:4,2:3,3:3,4:3,5:2},11:{1:4,2:3,3:3,4:3,5:2,6:1},12:{1:4,2:3,3:3,4:3,5:2,6:1},13:{1:4,2:3,3:3,4:3,5:2,6:1,7:1},14:{1:4,2:3,3:3,4:3,5:2,6:1,7:1},15:{1:4,2:3,3:3,4:3,5:2,6:1,7:1,8:1},16:{1:4,2:3,3:3,4:3,5:2,6:1,7:1,8:1},17:{1:4,2:3,3:3,4:3,5:2,6:1,7:1,8:1,9:1},18:{1:4,2:3,3:3,4:3,5:3,6:1,7:1,8:1,9:1},19:{1:4,2:3,3:3,4:3,5:3,6:2,7:1,8:1,9:1},20:{1:4,2:3,3:3,4:3,5:3,6:2,7:2,8:1,9:1}};properties.oldSpellToNew={'obscuring mist':'fog cloud','chill metal':'heat metal','cure light wounds':'cure wounds','cure moderate wounds':'cure wounds','cure serious wounds':'cure wounds','cure critical wounds':'cure wounds','expeditious retreat':'longstrider','bear\'s endurance':'enhance ability','bull\'s strength':'enhance ability','cat\'s grace':'enhance ability','eagle\'s splendor':'enhance ability','fox\'s cunning':'enhance ability','owl\'s wisdom':'enhance ability',displacement:'mirror image'};properties.spells=[{name:'Abi-Dalzim\'s Horrid Wilting',level:'8'},{name:'Absorb Elements',level:'1'},{name:'Acid Splash',level:'0'},{name:'Aganazzar\'s Scorcher',level:'2'},{name:'Aid',level:'2'},{name:'Alarm',level:'1'},{name:'Alter Self',level:'2'},{name:'Animal Friendship',level:'1'},{name:'Animal Messenger',level:'2'},{name:'Animal Shapes',level:'8'},{name:'Animate Dead',level:'3'},{name:'Animate Objects',level:'5'},{name:'Antilife Shell',level:'5'},{name:'Antimagic Field',level:'8'},{name:'Antipathy/Sympathy',level:'8'},{name:'Arcane Eye',level:'4'},{name:'Arcane Gate',level:'6'},{name:'Arcane Lock',level:'2'},{name:'Armor of Agathys',level:'1'},{name:'Arms of Hadar',level:'1'},{name:'Astral Projection',level:'9'},{name:'Augury',level:'2'},{name:'Aura of Life',level:'4'},{name:'Aura of Purity',level:'4'},{name:'Aura of Vitality',level:'3'},{name:'Awaken',level:'5'},{name:'Bane',level:'1'},{name:'Banishing Smite',level:'5'},{name:'Banishment',level:'4'},{name:'Barkskin',level:'2'},{name:'Beacon of Hope',level:'3'},{name:'Beast Bond',level:'1'},{name:'Beast Sense',level:'2'},{name:'Bestow Curse',level:'3'},{name:'Bigby\'s Hand',level:'5'},{name:'Blade Barrier',level:'6'},{name:'Blade Ward',level:'0'},{name:'Bless',level:'1'},{name:'Blight',level:'4'},{name:'Blinding Smite',level:'3'},{name:'Blindness/Deafness',level:'2'},{name:'Blink',level:'3'},{name:'Blur',level:'2'},{name:'Bones of the Earth',level:'6'},{name:'Branding Smite',level:'2'},{name:'Burning Hands',level:'1'},{name:'Call Lightning',level:'3'},{name:'Calm Emotions',level:'2'},{name:'Catapult',level:'1'},{name:'Chain Lightning',level:'6'},{name:'Charm Person',level:'1'},{name:'Chill Touch',level:'0'},{name:'Chromatic Orb',level:'1'},{name:'Circle of Death',level:'6'},{name:'Circle of Power',level:'5'},{name:'Clairvoyance',level:'3'},{name:'Clone',level:'8'},{name:'Cloud of Daggers',level:'2'},{name:'Cloudkill',level:'5'},{name:'Color Spray',level:'1'},{name:'Command',level:'1'},{name:'Commune',level:'5'},{name:'Commune with Nature',level:'5'},{name:'Compelled Duel',level:'1'},{name:'Comprehend Languages',level:'1'},{name:'Compulsion',level:'4'},{name:'Cone of Cold',level:'5'},{name:'Confusion',level:'4'},{name:'Conjure Animals',level:'3'},{name:'Conjure Barrage',level:'3'},{name:'Conjure Celestial',level:'7'},{name:'Conjure Elemental',level:'5'},{name:'Conjure Fey',level:'6'},{name:'Conjure Minor Elementals',level:'4'},{name:'Conjure Volley',level:'5'},{name:'Conjure Woodland Beings',level:'4'},{name:'Contact Other Plane',level:'5'},{name:'Contagion',level:'5'},{name:'Contingency',level:'6'},{name:'Continual Flame',level:'2'},{name:'Control Flames',level:'0'},{name:'Control Water',level:'4'},{name:'Control Weather',level:'8'},{name:'Control Winds',level:'5'},{name:'Cordon of Arrows',level:'2'},{name:'Counterspell',level:'3'},{name:'Create Bonfire',level:'0'},{name:'Create Food and Water',level:'3'},{name:'Create or Destroy Water',level:'1'},{name:'Create Undead',level:'6'},{name:'Creation',level:'5'},{name:'Crown of Madness',level:'2'},{name:'Crusader\'s Mantle',level:'3'},{name:'Cure Wounds',level:'1'},{name:'Dancing Lights',level:'0'},{name:'Darkness',level:'2'},{name:'Darkvision',level:'2'},{name:'Daylight',level:'3'},{name:'Death Ward',level:'4'},{name:'Delayed Blast Fireball',level:'7'},{name:'Demiplane',level:'8'},{name:'Destructive Wave',level:'5'},{name:'Detect Evil and Good',level:'1'},{name:'Detect Magic',level:'1'},{name:'Detect Poison and Disease',level:'1'},{name:'Detect Thoughts',level:'2'},{name:'Dimension Door',level:'4'},{name:'Disguise Self',level:'1'},{name:'Disintegrate',level:'6'},{name:'Dispel Evil and Good',level:'5'},{name:'Dispel Magic',level:'3'},{name:'Dissonant Whispers',level:'1'},{name:'Divination',level:'4'},{name:'Divine Favor',level:'1'},{name:'Divine Word',level:'7'},{name:'Dominate Beast',level:'4'},{name:'Drawmij\'s Instant Summons',level:'6'},{name:'Dominate Monster',level:'8'},{name:'Dominate Person',level:'5'},{name:'Dream',level:'5'},{name:'Druidcraft',level:'0'},{name:'Dust Devil',level:'2'},{name:'Earth Tremor',level:'1'},{name:'Earthbind',level:'2'},{name:'Earthquake',level:'8'},{name:'Eldritch Blast',level:'0'},{name:'Elemental Bane',level:'4'},{name:'Elemental Weapon',level:'3'},{name:'Enhance Ability',level:'2'},{name:'Enlarge/Reduce',level:'2'},{name:'Ensnaring Strike',level:'1'},{name:'Entangle',level:'1'},{name:'Enthrall',level:'2'},{name:'Erupting Earth',level:'3'},{name:'Etherealness',level:'7'},{name:'Evard\'s Black Tentacles',level:'4'},{name:'Expeditious Retreat',level:'1'},{name:'Eyebite',level:'6'},{name:'Fabricate',level:'4'},{name:'Faerie Fire',level:'1'},{name:'False Life',level:'1'},{name:'Fear',level:'3'},{name:'Feather Fall',level:'1'},{name:'Feeblemind',level:'8'},{name:'Feign Death',level:'3'},{name:'Find Familiar',level:'1'},{name:'Find Steed',level:'2'},{name:'Find the Path',level:'6'},{name:'Find Traps',level:'2'},{name:'Finger of Death',level:'7'},{name:'Fireball',level:'3'},{name:'Fire Bolt',level:'0'},{name:'Fire Shield',level:'4'},{name:'Fire Storm',level:'7'},{name:'Flame Arrows',level:'3'},{name:'Flame Blade',level:'2'},{name:'Flame Strike',level:'5'},{name:'Flaming Sphere',level:'2'},{name:'Flesh to Stone',level:'6'},{name:'Fly',level:'3'},{name:'Fog Cloud',level:'1'},{name:'Forbiddance',level:'6'},{name:'Forcecage',level:'7'},{name:'Foresight',level:'9'},{name:'Freedom of Movement',level:'4'},{name:'Friends',level:'0'},{name:'Frostbite',level:'0'},{name:'Gaseous Form',level:'3'},{name:'Gate',level:'9'},{name:'Geas',level:'5'},{name:'Gentle Repose',level:'2'},{name:'Giant Insect',level:'4'},{name:'Glibness',level:'8'},{name:'Globe of Invulnerability',level:'6'},{name:'Glyph of Warding',level:'3'},{name:'Goodberry',level:'1'},{name:'Grasping Vine',level:'4'},{name:'Grease',level:'1'},{name:'Greater Invisibility',level:'4'},{name:'Greater Restoration',level:'5'},{name:'Guardian of Faith',level:'4'},{name:'Guards and Wards',level:'6'},{name:'Guidance',level:'0'},{name:'Guiding Bolt',level:'1'},{name:'Gust',level:'0'},{name:'Gust of Wind',level:'2'},{name:'Hail of Thorns',level:'1'},{name:'Hallow',level:'5'},{name:'Hallucinatory Terrain',level:'4'},{name:'Harm',level:'6'},{name:'Haste',level:'3'},{name:'Heal',level:'6'},{name:'Healing Word',level:'1'},{name:'Heat Metal',level:'2'},{name:'Hellish Rebuke',level:'1'},{name:'Heroes\' Feast',level:'6'},{name:'Heroism',level:'1'},{name:'Hex',level:'1'},{name:'Hold Monster',level:'5'},{name:'Hold Person',level:'2'},{name:'Holy Aura',level:'8'},{name:'Hunger of Hadar',level:'3'},{name:'Hunter\'s Mark',level:'1'},{name:'Hypnotic Pattern',level:'3'},{name:'Ice Knife',level:'1'},{name:'Ice Storm',level:'4'},{name:'Identify',level:'1'},{name:'Illusory Script',level:'1'},{name:'Immolation',level:'5'},{name:'Imprisonment',level:'9'},{name:'Incendiary Cloud',level:'8'},{name:'Inflict Wounds',level:'1'},{name:'Insect Plague',level:'5'},{name:'Investiture of Flame',level:'6'},{name:'Investiture of Ice',level:'6'},{name:'Investiture of Stone',level:'6'},{name:'Investiture of Wind',level:'6'},{name:'Invisibility',level:'2'},{name:'Jump',level:'1'},{name:'Knock',level:'2'},{name:'Legend Lore',level:'5'},{name:'Leomund\'s Secret Chest',level:'4'},{name:'Leomund\'s Tiny Hut',level:'3'},{name:'Lesser Restoration',level:'2'},{name:'Levitate',level:'2'},{name:'Light',level:'0'},{name:'Lightning Arrow',level:'3'},{name:'Lightning Bolt',level:'3'},{name:'Locate Animals or Plants',level:'2'},{name:'Locate Creature',level:'4'},{name:'Locate Object',level:'2'},{name:'Longstrider',level:'1'},{name:'Maelstrom',level:'5'},{name:'Mage Armor',level:'1'},{name:'Mage Hand',level:'0'},{name:'Magic Circle',level:'3'},{name:'Magic Jar',level:'6'},{name:'Magic Missile',level:'1'},{name:'Magic Mouth',level:'2'},{name:'Magic Stone',level:'0'},{name:'Magic Weapon',level:'2'},{name:'Major Image',level:'3'},{name:'Mass Cure Wounds',level:'5'},{name:'Mass Heal',level:'9'},{name:'Mass Healing Word',level:'3'},{name:'Mass Suggestion',level:'6'},{name:'Maximilian\'s Earthen Grasp',level:'2'},{name:'Maze',level:'8'},{name:'Meld into Stone',level:'3'},{name:'Melf\'s Acid Arrow',level:'2'},{name:'Melf\'s Minute Meteors',level:'3'},{name:'Mending',level:'0'},{name:'Message',level:'0'},{name:'Meteor Swarm',level:'9'},{name:'Mind Blank',level:'8'},{name:'Minor Illusion',level:'0'},{name:'Mirage Arcane',level:'7'},{name:'Mirror Image',level:'2'},{name:'Mislead',level:'5'},{name:'Misty Step',level:'2'},{name:'Modify Memory',level:'5'},{name:'Mold Earth',level:'0'},{name:'Moonbeam',level:'2'},{name:'Mordenkainen\'s Faithful Hound',level:'4'},{name:'Mordenkainen\'s Magnificent Mansion',level:'7'},{name:'Mordenkainen\'s Private Sanctum',level:'4'},{name:'Mordenkainen\'s Sword',level:'7'},{name:'Move Earth',level:'6'},{name:'Nondetection',level:'3'},{name:'Nystul\'s Magic Aura',level:'2'},{name:'Otiluke\'s Freezing Sphere',level:'6'},{name:'Otiluke\'s Resilient Sphere',level:'4'},{name:'Otto\'s Irresistible Dance',level:'6'},{name:'Pass without Trace',level:'2'},{name:'Passwall',level:'5'},{name:'Permanent Image',level:'6'},{name:'Phantasmal Force',level:'2'},{name:'Phantasmal Killer',level:'4'},{name:'Phantom Steed',level:'3'},{name:'Planar Ally',level:'6'},{name:'Planar Binding',level:'5'},{name:'Plane Shift',level:'7'},{name:'Plant Growth',level:'3'},{name:'Poison Spray',level:'0'},{name:'Polymorph',level:'4'},{name:'Power Word Heal',level:'9'},{name:'Power Word Kill',level:'9'},{name:'Power Word Stun',level:'8'},{name:'Prayer of Healing',level:'2'},{name:'Prestidigitation',level:'0'},{name:'Primordial Ward',level:'6'},{name:'Prismatic Spray',level:'7'},{name:'Prismatic Wall',level:'9'},{name:'Produce Flame',level:'0'},{name:'Programmed Illusion',level:'6'},{name:'Project Image',level:'7'},{name:'Protection from Energy',level:'3'},{name:'Protection from Evil and Good',level:'1'},{name:'Protection from Poison',level:'2'},{name:'Purify Food and Drink',level:'1'},{name:'Pyrotechnics',level:'2'},{name:'Raise Dead',level:'5'},{name:'Rary\'s Telepathic Bond',level:'5'},{name:'Ray of Enfeeblement',level:'2'},{name:'Ray of Frost',level:'0'},{name:'Ray of Sickness',level:'1'},{name:'Regenerate',level:'7'},{name:'Reincarnate',level:'5'},{name:'Remove Curse',level:'3'},{name:'Resistance',level:'0'},{name:'Resurrection',level:'7'},{name:'Reverse Gravity',level:'7'},{name:'Revivify',level:'3'},{name:'Rope Trick',level:'2'},{name:'Sacred Flame',level:'0'},{name:'Sanctuary',level:'1'},{name:'Scorching Ray',level:'2'},{name:'Scrying',level:'5'},{name:'Searing Smite',level:'1'},{name:'See Invisibility',level:'2'},{name:'Seeming',level:'5'},{name:'Sending',level:'3'},{name:'Sequester',level:'7'},{name:'Shape Water',level:'0'},{name:'Shapechange',level:'9'},{name:'Shatter',level:'2'},{name:'Shield',level:'1'},{name:'Shield of Faith',level:'1'},{name:'Shillelagh',level:'0'},{name:'Shocking Grasp',level:'0'},{name:'Silence',level:'2'},{name:'Silent Image',level:'1'},{name:'Simulacrum',level:'7'},{name:'Skywrite',level:'2'},{name:'Sleep',level:'1'},{name:'Sleet Storm',level:'3'},{name:'Slow',level:'3'},{name:'Snilloc\'s Snowball Swarm',level:'2'},{name:'Spare the Dying',level:'0'},{name:'Speak with Animals',level:'1'},{name:'Speak with Dead',level:'3'},{name:'Speak with Plants',level:'3'},{name:'Spider Climb',level:'2'},{name:'Spike Growth',level:'2'},{name:'Spirit Guardians',level:'3'},{name:'Spiritual Weapon',level:'2'},{name:'Staggering Smite',level:'4'},{name:'Stinking Cloud',level:'3'},{name:'Stone Shape',level:'4'},{name:'Stoneskin',level:'4'},{name:'Storm of Vengeance',level:'9'},{name:'Storm Sphere',level:'4'},{name:'Suggestion',level:'2'},{name:'Sunbeam',level:'6'},{name:'Sunburst',level:'8'},{name:'Swift Quiver',level:'5'},{name:'Symbol',level:'7'},{name:'Tasha\'s Hideous Laughter',level:'1'},{name:'Telekinesis',level:'5'},{name:'Telepathy',level:'8'},{name:'Teleport',level:'7'},{name:'Teleportation Circle',level:'5'},{name:'Tenser\'s Floating Disk',level:'1'},{name:'Thaumaturgy',level:'0'},{name:'Thorn Whip',level:'0'},{name:'Thunderous Smite',level:'1'},{name:'Thunderclap',level:'0'},{name:'Thunderwave',level:'1'},{name:'Tidal Wave',level:'3'},{name:'Time Stop',level:'9'},{name:'Tongues',level:'3'},{name:'Transmute Rock',level:'5'},{name:'Transport via Plants',level:'6'},{name:'Trap the Soul',level:'8'},{name:'Tree Stride',level:'5'},{name:'True Polymorph',level:'9'},{name:'True Resurrection',level:'9'},{name:'True Seeing',level:'6'},{name:'True Strike',level:'0'},{name:'Tsunami',level:'8'},{name:'Unseen Servant',level:'1'},{name:'Vampiric Touch',level:'3'},{name:'Vicious Mockery',level:'0'},{name:'Vitriolic Sphere',level:'4'},{name:'Wall of Fire',level:'4'},{name:'Wall of Force',level:'5'},{name:'Wall of Ice',level:'6'},{name:'Wall of Sand',level:'3'},{name:'Wall of Stone',level:'5'},{name:'Wall of Thorns',level:'6'},{name:'Wall of Water',level:'3'},{name:'Warding Bond',level:'2'},{name:'Warding Wind',level:'2'},{name:'Water Breathing',level:'3'},{name:'Water Walk',level:'3'},{name:'Watery Sphere',level:'4'},{name:'Web',level:'2'},{name:'Weird',level:'9'},{name:'Whirlwind',level:'7'},{name:'Wind Walk',level:'6'},{name:'Wind Wall',level:'3'},{name:'Wish',level:'9'},{name:'Witch Bolt',level:'1'},{name:'Word of Recall',level:'6'},{name:'Wrathful Smite',level:'1'},{name:'Zone of Truth',level:'2'}];return{getProperties:function getProperties(){return properties;}};}]);var otyugh='Otyugh CR 4\nXP 1,200\nN Large aberration\nInit +0; Senses darkvision 60 ft., scent; Perception +9\nDEFENSE\nAC 17, touch 9, flat-footed 17 (+8 natural, -1 size)\nhp 39 (6d8+12)\nFort +3, Ref +2, Will +6\nOFFENSE\nSpeed 20 ft.\nMelee bite +7 (1d8+4 plus disease), 2 tentacles +3 (1d6+2 plus grab)\nSpace 10 ft.; Reach 10 ft. (15 ft. with tentacle)\nSpecial Attacks constrict (tentacle, 1d6+2)\nSTATISTICS\nStr 18, Dex 10, Con 13, Int 5, Wis 13, Cha 6\nBase Atk +4; CMB +9 (+13 grapple); CMD 19 (21 vs. trip)\nFeats Alertness, Toughness, Weapon Focus (tentacle)\nSkills Perception +9, Stealth +2 (+10 in lair); Racial Modifiers +8 Stealth in lair\nLanguages Common';angular.module('pfTo5e',['pfTo5eFilters','pfTo5eSharedProperties']).controller('MainCtrl',['$http','$scope','$filter','$sce','sharedProperties',function($http,$scope,$filter,$sce,sharedProperties){$scope.pfStats=otyugh;var stats={};var sharedProp=sharedProperties.getProperties();$scope.converting=false;$scope.capitalizeFirstLetter=function(string){return string.charAt(0).toUpperCase()+string.slice(1);};var warning=function warning(error){$scope.error=error;console.warn(error);};var sortNumber=function sortNumber(a,b){return a-b;};var sumOfObj=function sumOfObj(obj){var sum=0;for(var el in obj){if(obj.hasOwnProperty(el)){sum+=parseFloat(obj[el]);}}return sum;};$scope.numberToWord=function(number){return $filter('numberToWord')(number);};$scope.toTrustedHTML=function(html){return $sce.trustAsHtml(html);};var clean=function clean(statblock){return statblock.replace(/–/g,'-').replace(/—/g,'-').replace(/’/g,'\'').replace(/lnit/g,'Init').replace(/lnt/g,'Int').replace(/ft\./gi,'ft').replace(/\+O/gi,'+0').replace(/(\d+)o/gi,'$10').replace(/o(\d+)/gi,'0$1').replace(/(\d+)l/g,'$11').replace(/\+ (\d+)/g,'+$1').replace(/l(\d+)/g,'1$1').replace(/1 (\d+)/g,'1$1').replace(/1 d(\d+)/g,'1d$1').replace(/1 d (\d+)/g,'1d$1').replace(/(\d+)d (\d+)/g,'$1d$2').replace(/Me1ee/g,'Melee').replace(/Specia1/g,'Special').replace(/Special Attack /g,'Special Attacks ').replace(/s1ashing/g,'slashing').replace(/a1e/g,'ale').replace(/natura1/g,'natural').replace(/b1indsense/g,'blindsense').replace(/b1i ndsense/g,'blindsense').replace(/1ies/g,'lies').replace(/i n/g,'in').replace(/ra nge/g,'range').replace(/fig h t/g,'fight').replace(/g ro u p/g,'group').replace(/rou nd/g,'round').replace(/stri ke/g,'strike').replace(/Stri ke/g,'Strike').replace(/u narmed/g,'unarmed').replace(/Wea pon/g,'Weapon').replace(/Tough ness/g,'Toughness').replace(/ca l l s/g,'calls').replace(/flexi b i l ity/g,'flexibility').replace(/q u ite/g,'quite').replace(/I n /g,'In ').replace(/a n d/g,'and').replace(/ g p/g,' gp').replace(/ o n /g,' o n ').replace(/unti1/g,'until').replace(/i nto/g,'into').replace(/f1ees/g,'flees').replace(/sq ueezing/g,'squeezing').replace(/s1ipping/g,'slipping').replace(/victi m/g,'victim').replace(/ventu res/g,'ventures').replace(/s1ipping/g,'slipping').replace(/s1ipping/g,'slipping').replace(/co1d/g,'cold').replace(/fi re/g,'fire').replace(/1ight/g,'light').replace(/Wi11/g,'Will').replace(/f1at/g,'flat').replace(/p1us/g,'plus').replace(/gra pp/g,'grapp').replace(/grapp1e/g,'grapple').replace(/wou1d/g,'would').replace(/s1am/g,'slam').replace(/whi1e/g,'while').replace(/Dark1ands/g,'Darklands').replace(/I m proved/g,'Improved').replace(/I nitiative/g,'Initiative').replace(/Ski l l/g,'Skill').replace(/Ski 1 1/g,'Skill').replace(/Ski11/g,'Skill').replace(/Ref1exes/g,'Reflexes').replace(/ho1d/g,'hold').replace(/m ust/g,'must').replace(/Ru1ebook/g,'Rulebook').replace(/Stea1th/g,'Stealth').replace(/verba1/g,'verbal').replace(/spe11s/g,'spells').replace(/sea1/g,'seal').replace(/re1ative/g,'relative').replace(/Ski11/g,'Skill').replace(/S1eight/g,'Sleight').replace(/G reat/g,'Great').replace(/1edge/g,'ledge').replace(/l<nowledge/g,'Knowledge').replace(/d ungeoneering/g,'dungeoneering').replace(/d ungeoneeri ng/g,'dungeoneering').replace(/Intim idate/g,'Intimidate').replace(/Stea lth/g,'Stealth').replace(/Surviva l/g,'Survival').replace(/Med i u m/g,'Medium').replace(/Med i u m/g,'Medium').replace(/Languages(.*) Ore/g,'Languages$1 Orc').replace(/Hal lit/g,'Hallit').replace(/save\nFort/g,'save Fort');};var process=function process(statblock){return statblock.replace(/(\r\n|\n|\r)/gm,'#').replace(/(Bard|Cleric|Druid|Paladin|Sorcerer|Wizard|Abjurer|Conjurer|Diviner|Enchanter|Evocationist|Illusionist|Necromancer|Transmuter|Universalist|Witch|Oracle|Antipaladin) spells (prepared|known)/gi,'Spells').replace(/Alchemist Extracts Prepared/gi,'Spells').replace(/\sCR/g,'#CR').replace(/(\d+)XP/g,'$1 #XP').replace(/#DEFENSE/g,'').replace(/#OFFENSE/g,'').replace(/#STATISTICS/g,'').replace(/Speed(\d+)/g,'Speed ($1)').replace(/;\sSenses/g,'#Senses').replace(/\sSenses/g,'#Senses').replace(/;\sother gear/gi,'#Other Gear').replace(/;\sRacial Modifiers/g,'#Racial Modifiers').replace(/\d+\sHD; /gi,'').replace(/\(((?:\+|-)\d+)\sranged,\s/gi,'$1 (').replace(/\(((?:\+|-)\d+)\smelee,\s/gi,'$1 (').replace(/\/17-20/gi,'').replace(/\/18-20/gi,'').replace(/\/19-20/gi,'').replace(/;\s*?Reach/g,'; #Reach').replace(/;\s*?Resist/g,'; #Resist').replace(/;\s*?DR/g,'; #DR').replace(/;\s*?Immune/g,'; #Immune').replace(/;\s*?SR/g,'; #SR');};var findKeyword=function findKeyword(statblock){var keyword={attr:{},actions:[],traits:[]};var match=void 0;var regex=/#\s*(XP|(LG|LN|LE|NG|N|NE|CG|CN|CE)|(fine|diminutive|tiny|small|medium|large|huge|gargantuan|colossal)|Init|AC|hp|speed|str|dex|con|int|wis|cha|Base Atk|fort|ref|will|feats|skills|Racial Modifiers|immune|resist|DR|SR|senses|languages|SQ|Defensive Abilities|CR|Pathfinder RPG|(Melee|Ranged)|Space|Reach|Resist|Weaknesses|Spell-Like Abilities|Special Attacks|Spells|Combat Gear|Other Gear|Gear|Morale|During Combat|TACTICS|STATISTICS|OFFENSE|DEFENSE|SPECIAL ABILITIES)(?=\s|#)/gi;while(match=regex.exec(statblock)){var key=match[1].toLowerCase();if(key==='actions'){keyword.actions.Actions=match.index;}else{keyword.attr[key]=match.index;}}return keyword;};var extractSection=function extractSection(text,title){var newTitle=title.replace(/([-()\\/])/g,'\\$1');return text.replace(new RegExp('^[\\s\\.#]*'+newTitle+'?[\\s\\.#]*','i'),'').replace(/#/g,' ');};var splitStatblock=function splitStatblock(statblock,keyword){var indexArray=[];for(var section in keyword){if(keyword.hasOwnProperty(section)){var obj=keyword[section];for(var key in obj){if(obj.hasOwnProperty(key)){indexArray.push(obj[key]);}}}}indexArray.sort(sortNumber);keyword.attr.name=extractSection(statblock.substring(0,indexArray[0]),'name').toLowerCase().replace(/\b\w/g,function(l){return l.toUpperCase();});for(var _section in keyword){if(keyword.hasOwnProperty(_section)){var _obj=keyword[_section];for(var _key in _obj){if(_obj.hasOwnProperty(_key)){var start=_obj[_key];var nextPos=indexArray.indexOf(start)+1;var end=indexArray[nextPos]||statblock.length;keyword[_section][_key]=extractSection(statblock.substring(start,end),_key);}}}}keyword.attr.name=extractSection(statblock.substring(0,indexArray[0]),'name').toLowerCase().replace(/\b\w/g,function(l){return l.toUpperCase();});if(keyword.attr.name.slice(0,4).includes('The ')){keyword.attr.nameNoPreWords=keyword.attr.name.substring(4);}else if(keyword.attr.name.slice(0,2).includes('A ')){keyword.attr.nameNoPreWords=keyword.attr.name.substring(3);}else{keyword.attr.nameNoPreWords=keyword.attr.name;}var abilitiesName=['str','dex','con','int','wis','cha'];var abilities='Str ';var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=abilitiesName[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var ability=_step.value;if(keyword.attr[ability]){abilities+=keyword.attr[ability]+' ';delete keyword.attr[ability];}}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}keyword.attr.abilities=abilities;var _iteratorNormalCompletion2=true;var _didIteratorError2=false;var _iteratorError2=undefined;try{for(var _iterator2=sharedProp.alignments[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=true){var alignment=_step2.value;if(keyword.attr.hasOwnProperty(alignment)){keyword.attr.alignment=alignment+' '+keyword.attr[alignment];delete keyword.attr[alignment];break;}}}catch(err){_didIteratorError2=true;_iteratorError2=err;}finally{try{if(!_iteratorNormalCompletion2&&_iterator2.return){_iterator2.return();}}finally{if(_didIteratorError2){throw _iteratorError2;}}}var _iteratorNormalCompletion3=true;var _didIteratorError3=false;var _iteratorError3=undefined;try{for(var _iterator3=sharedProp.sizes[Symbol.iterator](),_step3;!(_iteratorNormalCompletion3=(_step3=_iterator3.next()).done);_iteratorNormalCompletion3=true){var size=_step3.value;if(keyword.attr.hasOwnProperty(size)){keyword.attr.size=size;keyword.attr.type=keyword.attr[size];delete keyword.attr[size];break;}}}catch(err){_didIteratorError3=true;_iteratorError3=err;}finally{try{if(!_iteratorNormalCompletion3&&_iterator3.return){_iterator3.return();}}finally{if(_didIteratorError3){throw _iteratorError3;}}}return keyword;};var parseAbility=function parseAbility(abilityName,abilitiesObj){var max=30;var shortAbilityName=abilityName.substring(0,3);var abilityRegex=new RegExp($scope.capitalizeFirstLetter(shortAbilityName)+'|'+shortAbilityName);if(stats.attr.abilities.match(abilityRegex)){var endPoint=stats.attr.abilities.includes(',')?stats.attr.abilities.indexOf(','):stats.attr.abilities.length;var abilityString=stats.attr.abilities.slice(0,endPoint);var bonus=abilityString.match(/\d+/);var ability=void 0;var originallyEmpty=false;stats.attr.abilities=stats.attr.abilities.slice(endPoint+1).trim();if(bonus){ability=parseInt(bonus[0],10);}else{if(abilityName==='strength'){ability=6;}if(abilityName==='dexterity'){ability=2;}if(abilityName==='constitution'){ability=13;originallyEmpty=true;}if(abilityName==='intelligence'){ability=2;}if(abilityName==='wisdom'){ability=2;}if(abilityName==='charisma'){ability=2;}}if(ability>20){ability=Math.round(ability*0.975);}var constrainedAbility=Math.min(ability,max);abilitiesObj[abilityName]={mod:Math.floor((constrainedAbility-10)/2),originalMod:Math.floor((ability-10)/2),originallyEmpty:originallyEmpty,score:constrainedAbility,shortName:shortAbilityName};}};var parseAbilities=function parseAbilities(){var abilitiesObj={};var abilities=['strength','dexterity','constitution','intelligence','wisdom','charisma'];var _iteratorNormalCompletion4=true;var _didIteratorError4=false;var _iteratorError4=undefined;try{for(var _iterator4=abilities[Symbol.iterator](),_step4;!(_iteratorNormalCompletion4=(_step4=_iterator4.next()).done);_iteratorNormalCompletion4=true){var ability=_step4.value;parseAbility(ability,abilitiesObj);}}catch(err){_didIteratorError4=true;_iteratorError4=err;}finally{try{if(!_iteratorNormalCompletion4&&_iterator4.return){_iterator4.return();}}finally{if(_didIteratorError4){throw _iteratorError4;}}}stats.attr.abilities=abilitiesObj;};var parseAlignment=function parseAlignment(){stats.attr.alignment=stats.attr.alignment.replace(' (long)','').replace(' (tall)','');var match=stats.attr.alignment.match(/(.*?)?\s?(Fine|Diminutive|Tiny|Small|Medium|Large|Huge|Gargantuan|Colossal)\s(.*)/i);if(!match||!match[1]||!match[2]||!match[3]){warning('Character doesn\'t have valid type/size/alignment format');}if(match[1]==='lg'){stats.attr.alignment='lawful good';}else if(match[1]==='ln'){stats.attr.alignment='lawful neutral';}else if(match[1]==='le'){stats.attr.alignment='lawful evil';}else if(match[1]==='ng'){stats.attr.alignment='neutral good';}else if(match[1]==='n'){stats.attr.alignment='neutral';}else if(match[1]==='ne'){stats.attr.alignment='neutral evil';}else if(match[1]==='cg'){stats.attr.alignment='chaotic good';}else if(match[1]==='cn'){stats.attr.alignment='chaotic neutral';}else if(match[1]==='ce'){stats.attr.alignment='chaotic evil';}stats.attr.size=match[2].toLowerCase();stats.attr.type=match[3];};var parseArmorClass=function parseArmorClass(){var regex=/(\d+)(?:.*\((.*)\))?/gi;var match=regex.exec(stats.attr.ac);if(!match||!match[1]){warning('Character doesn\'t have valid AC format');}stats.attr.ac={originalAc:parseInt(match[1],10)};if(match[2]){var splitAC=match[2].split(', ');var _iteratorNormalCompletion5=true;var _didIteratorError5=false;var _iteratorError5=undefined;try{for(var _iterator5=splitAC[Symbol.iterator](),_step5;!(_iteratorNormalCompletion5=(_step5=_iterator5.next()).done);_iteratorNormalCompletion5=true){var ac=_step5.value;var splitACBonus=ac.split(' ');stats.attr.ac[splitACBonus[1]]=parseInt(splitACBonus[0],10);}}catch(err){_didIteratorError5=true;_iteratorError5=err;}finally{try{if(!_iteratorNormalCompletion5&&_iterator5.return){_iterator5.return();}}finally{if(_didIteratorError5){throw _iteratorError5;}}}}};var parseHD=function parseHD(hd){var regex=/(\d+)d(\d+)/gi;var splitHD=void 0;var HDsize=void 0;var bonusRegex=/((?:\+|-)(\d+))/gi;var bonusHPMatch=void 0;var bonusHP=void 0;stats.attr.hd={};var originalSize=stats.attr.size.toLowerCase();var numHD=0;while(splitHD=regex.exec(hd)){if(!splitHD||!splitHD[1]||!splitHD[2]){warning('Character doesn\'t have valid hd format');}numHD+=parseInt(splitHD[1],10);HDsize=parseInt(splitHD[2],10);}stats.attr.hdTotal=numHD;while(bonusHPMatch=bonusRegex.exec(hd)){bonusHP=parseInt(bonusHPMatch[1],10);}if(bonusHP>numHD*stats.attr.abilities.constitution.mod*3){stats.attr.abilities.constitution.score+=2;stats.attr.abilities.constitution.mod+=1;}while(bonusHP>numHD*stats.attr.abilities.constitution.mod){numHD+=1;bonusHP-=HDsize;}if(stats.attr.abilities.constitution.originallyEmpty&&stats.attr.type==='undead'){numHD+=1;}if(originalSize==='small'||originalSize==='medium'){numHD+=1;}else if(originalSize==='large'||originalSize==='huge'||originalSize==='colossal'){numHD+=2;}else if(originalSize==='gargantuan'){numHD-=3;}stats.attr.hd[sharedProp.hdBySize[originalSize]]=numHD;};var parseHp=function parseHp(){var plusRegex=/(.*)(\+|-)(\d+)\s*plus\s*(\d+)(.*)/gi;var plusMatch=void 0;while(plusMatch=plusRegex.exec(stats.attr.hp)){if(plusMatch&&plusMatch[0]&&plusMatch[1]&&plusMatch[2]&&plusMatch[3]&&plusMatch[4]){stats.attr.hp=''+plusMatch[1]+plusMatch[2]+(parseInt(plusMatch[3],10)+parseInt(plusMatch[4],10));}}var match=stats.attr.hp.match(/(\d+).*\(([\dd\s+-]*)/i);if(!match||!match[1]||!match[2]){warning('Character doesn\'t have valid HP/HD format');}parseHD(match[2].trim());};var parseSavingThrows=function parseSavingThrows(){var match=stats.attr.fort.match(/((?:\+|-)\d+)/g);if(!match||!match[0]||!match[1]||!match[2]){warning('Character doesn\'t have valid saving throw format');}else{stats.attr.saves={fortitude:parseInt(match[0],10),reflex:parseInt(match[1],10),will:parseInt(match[2],10)};delete stats.attr.fort;}};var parseSpeed=function parseSpeed(){var regex=/(|burrow|climb|fly|swim|jet|)\s*\(?(\d+)\s*?(?:ft)?\s*(\(.*\))?/gi;var speedSection=stats.attr.speed;var match=void 0;stats.attr.speed={};while(match=regex.exec(speedSection)){if(!match[2]){warning('Character doesn\'t have valid speed format');}if(!match[1]){stats.attr.speed.speed=parseInt(match[2],10);}else{var speed=parseInt(match[2],10);if(match[1]==='jet'){stats.traits.push({name:'jet',description:'The '+stats.attr.nameNoPreWords.toLowerCase()+' can swim '+speed+' feet backward as an action. It must move in a straight line while jetting, and does not provoke opportunity attacks when it does so'});continue;}stats.attr.speed[match[1]]=speed;}}};var parseSkills=function parseSkills(){var regex=/([\w\s()']+).*?(\d+)/gi;var skillsSection=stats.attr.skills;var match=void 0;stats.attr.skills={};while(match=regex.exec(skillsSection)){stats.attr.skills[match[1].trim().toLowerCase()]=parseInt(match[2],10);}};var parseSenses=function parseSenses(){var regex=/(blindsight|darkvision|tremorsense|truesight|scent|low-light vision)(?:\s*?(\d+)\s*?ft?\s*(\(.*\))?)?/gi;var sensesSection=stats.attr.senses;var match=void 0;stats.attr.senses={};while(match=regex.exec(sensesSection)){if(!match||!match[1]){warning('Character doesn\'t have valid senses format');}var value=true;if(match[2]){value=parseInt(match[2],10);}stats.attr.senses[match[1]]=value;if(match[3]){if(match[3].indexOf('blind beyond')){stats.attr.senses.blindBeyond=true;}}}var perceptionRegex=/Perception\s((?:\+|-)\d+)/gi;while(match=perceptionRegex.exec(sensesSection)){if(match[1]&&stats.attr.skills){if(!stats.attr.skills.perception){stats.attr.skills.perception=parseInt(match[1],10);}else{stats.attr.skills.perception+=parseInt(match[1],10);}}}};var parseRacialModifiers=function parseRacialModifiers(){var regex=/((?:\+|-)\d+)\s([a-z]+)/gi;var match=void 0;while(match=regex.exec(stats.attr['racial modifiers'])){if(!stats.attr.skills[match[2].toLowerCase()]){stats.attr.skills[match[2].toLowerCase()]=parseInt(match[1],10);}else{stats.attr.skills[match[2].toLowerCase()]+=parseInt(match[1],10);}}delete stats.attr['racial modifiers'];};var parseReach=function parseReach(){stats.attr.reach=parseInt(stats.attr.reach,10);};var parseDR=function parseDR(){};var parseResist=function parseResist(){var damageResistances=[];var resistancesRegex=/(\w+)\s(\d+)/gi;var match=void 0;while(match=resistancesRegex.exec(stats.attr.resist)){if(match[2]>=10){damageResistances.push(match[1]);}}if(damageResistances.length>0){stats.damageResistances=damageResistances.join(', ');}};var parseImmune=function parseImmune(){if(stats.attr.immune.includes('sickened')){stats.conditionImmunities='poisoned';}};var addToMeleeAttacks=function addToMeleeAttacks(specialAttack){if(stats.attr.melee){stats.attr.melee+=', '+specialAttack;}else{stats.attr.melee=specialAttack;}};var parseSpecialAttacks=function parseSpecialAttacks(){var specialAttacksVar=stats.attr['special attacks'];stats.attr['special attacks']=specialAttacksVar.split(', ');var _iteratorNormalCompletion6=true;var _didIteratorError6=false;var _iteratorError6=undefined;try{for(var _iterator6=stats.attr['special attacks'][Symbol.iterator](),_step6;!(_iteratorNormalCompletion6=(_step6=_iterator6.next()).done);_iteratorNormalCompletion6=true){var specialAttack=_step6.value;if(specialAttack.includes('savage bite')){addToMeleeAttacks(specialAttack);stats.attr['special attacks'].splice(stats.attr['special attacks'].indexOf(specialAttack),1);}}}catch(err){_didIteratorError6=true;_iteratorError6=err;}finally{try{if(!_iteratorNormalCompletion6&&_iterator6.return){_iterator6.return();}}finally{if(_didIteratorError6){throw _iteratorError6;}}}};var parseAttack=function parseAttack(type){var matches=void 0;stats.attr[type+'Parsed']=stats.attr[type].split(/\), |\) or |\) and /);var _iteratorNormalCompletion7=true;var _didIteratorError7=false;var _iteratorError7=undefined;try{for(var _iterator7=stats.attr[type+'Parsed'][Symbol.iterator](),_step7;!(_iteratorNormalCompletion7=(_step7=_iterator7.next()).done);_iteratorNormalCompletion7=true){var attackParsed=_step7.value;var attackString=attackParsed.replace(/(.*) (\+\d+)(?:\/\+\d+)(?:\/\+\d+)(?:\/\+\d+)(?:\/\+\d+)(?:\/\+\d+)(?:\/\+\d+)(?:\/\+\d+)/gi,'8 $1 $2').replace(/(.*) (\+\d+)(?:\/\+\d+)(?:\/\+\d+)(?:\/\+\d+)(?:\/\+\d+)(?:\/\+\d+)(?:\/\+\d+)/gi,'7 $1 $2').replace(/(.*) (\+\d+)(?:\/\+\d+)(?:\/\+\d+)(?:\/\+\d+)(?:\/\+\d+)(?:\/\+\d+)/gi,'6 $1 $2').replace(/(.*) (\+\d+)(?:\/\+\d+)(?:\/\+\d+)(?:\/\+\d+)(?:\/\+\d+)/gi,'5 $1 $2').replace(/(.*) (\+\d+)(?:\/\+\d+)(?:\/\+\d+)(?:\/\+\d+)/gi,'4 $1 $2').replace(/(.*) (\+\d+)(?:\/\+\d+)(?:\/\+\d+)/gi,'3 $1 $2').replace(/(.*) (\+\d+)(?:\/\+\d+)/gi,'2 $1 $2').replace(/\*/g,'');var regex=/(?:(\d+)\s)?((?:\+\d+)?[\w\s']+)\s?((?:\+|-)\d+)?\s?\(([\dd\s+\-\w;]*)?(?:plus\s?(\d+[\dd\s+-]*)?([A-Za-z\s]+)\))?/g;var attack={};if(attackString.slice(-1)!==')'){attackString=attackString+')';}var rangedEncountered=false;while(matches=regex.exec(attackString)){attack.type=type;if(matches[1]){attack.number=parseInt(matches[1].trim(),10);}if(matches[2]){attack.name=matches[2].trim();}if(matches[3]){attack.toHit=parseInt(matches[3].trim(),10);}if(matches[4]){var damageMatch=matches[4].trim().match(/(\d+)d(\d+)\s?(?:\+|-)?\s?(\d+)?/);if(damageMatch&&damageMatch[1]){attack.damageDice=parseInt(damageMatch[1].trim(),10);}if(damageMatch&&damageMatch[2]){attack.damageDie=parseInt(damageMatch[2].trim(),10);}if(damageMatch&&damageMatch[3]){attack.damageBonus=parseInt(damageMatch[3].trim(),10);}if(matches[4].includes('grab')){attack.grab=true;var _iteratorNormalCompletion8=true;var _didIteratorError8=false;var _iteratorError8=undefined;try{for(var _iterator8=stats.attr['special attacks'][Symbol.iterator](),_step8;!(_iteratorNormalCompletion8=(_step8=_iterator8.next()).done);_iteratorNormalCompletion8=true){var specialAttack=_step8.value;specialAttack=specialAttack.toLowerCase();if(specialAttack.includes('constrict')){attack.constrict=true;}}}catch(err){_didIteratorError8=true;_iteratorError8=err;}finally{try{if(!_iteratorNormalCompletion8&&_iterator8.return){_iterator8.return();}}finally{if(_didIteratorError8){throw _iteratorError8;}}}}if(matches[4].includes('poison')){attack.poison={};attack.poison.type='poisoned';attack.poison.duration='1 hour';}if(matches[4].includes('paralysis')){attack.paralysis={};attack.paralysis.duration='1 minute';}if(matches[4].includes('disease')){attack.disease={};attack.disease.effect='poisoned';}}if(matches[5]){var secondaryDamageMatch=matches[5].trim().match(/(\d+)d(\d+)\s?(?:\+|-)?\s?(\d+)?/);if(secondaryDamageMatch&&secondaryDamageMatch[1]){attack.secondaryDamageDice=parseInt(secondaryDamageMatch[1].trim(),10);}if(secondaryDamageMatch&&secondaryDamageMatch[2]){attack.secondaryDamageDie=parseInt(secondaryDamageMatch[2].trim(),10);}if(secondaryDamageMatch&&secondaryDamageMatch[3]){attack.secondaryDamageBonus=parseInt(secondaryDamageMatch[3].trim(),10);}if(matches[6]){var splitEffects=matches[6].split(' ');if(splitEffects){attack.secondaryDamageType=splitEffects[0].trim();matches[6]=splitEffects.slice(1).join(' ');}}}var indexOfAttack=stats.attr[type].indexOf(attackParsed);var previousFiveChars=stats.attr[type].substring(indexOfAttack-5,indexOfAttack);var lengthOfAttack=attackParsed.length;var endOfAttack=indexOfAttack+lengthOfAttack;var nextFiveChars=stats.attr[type].substring(endOfAttack,endOfAttack+5);if(!attack.addToMultiattack){if(previousFiveChars.includes(', ')||previousFiveChars.includes(' and ')||nextFiveChars.includes(', ')||nextFiveChars.includes(' and ')){attack.addToMultiattack='and';}else if(previousFiveChars.includes(' or ')||nextFiveChars.includes(' or ')||attack.type==='ranged'&&!rangedEncountered){attack.addToMultiattack='or';}else if(attack.number>1){attack.addToMultiattack='and';}}stats.attacks.push(attack);if(!rangedEncountered&&attack.type==='ranged'){rangedEncountered=true;}}}}catch(err){_didIteratorError7=true;_iteratorError7=err;}finally{try{if(!_iteratorNormalCompletion7&&_iterator7.return){_iterator7.return();}}finally{if(_didIteratorError7){throw _iteratorError7;}}}};var parseMelee=function parseMelee(){parseAttack('melee');};var parseRanged=function parseRanged(){parseAttack('ranged');};var parseDuringCombat=function parseDuringCombat(){stats.traits.push({name:'During Combat',description:stats.attr['during combat']});};var parseMorale=function parseMorale(){stats.traits.push({name:'Morale',description:stats.attr.morale});};var parseSQ=function parseSQ(){stats.attr.sq=stats.attr.sq.split(', ');var _iteratorNormalCompletion9=true;var _didIteratorError9=false;var _iteratorError9=undefined;try{for(var _iterator9=stats.attr.sq[Symbol.iterator](),_step9;!(_iteratorNormalCompletion9=(_step9=_iterator9.next()).done);_iteratorNormalCompletion9=true){var specialQuality=_step9.value;if(specialQuality.match(/amphibious/i)){stats.traits.push({name:'amphibious',description:'The '+stats.attr.nameNoPreWords.toLowerCase()+' can breathe air and water'});}if(specialQuality.match(/water dependency/i)){stats.traits.push({name:'hold breath',description:'While out of water, the '+stats.attr.nameNoPreWords.toLowerCase()+' can hold its breath for 1 hour'});}if(specialQuality.match(/hold breath/i)){stats.traits.push({name:'hold breath',description:'The '+stats.attr.nameNoPreWords.toLowerCase()+' can hold its breath for 1 hour'});}}}catch(err){_didIteratorError9=true;_iteratorError9=err;}finally{try{if(!_iteratorNormalCompletion9&&_iterator9.return){_iterator9.return();}}finally{if(_didIteratorError9){throw _iteratorError9;}}}};var parseFeats=function parseFeats(){stats.attr.feats=stats.attr.feats.split(', ');var _iteratorNormalCompletion10=true;var _didIteratorError10=false;var _iteratorError10=undefined;try{for(var _iterator10=stats.attr.feats[Symbol.iterator](),_step10;!(_iteratorNormalCompletion10=(_step10=_iterator10.next()).done);_iteratorNormalCompletion10=true){var feat=_step10.value;if(feat.match(/Flyby Attack/i)){stats.traits.push({name:'Flyby',description:'The '+stats.attr.nameNoPreWords.toLowerCase()+' doesn\'t provoke an opportunity attack when it flies out of an enemy\'s reach'});}if(feat.match(/Blind-Fight/i)){stats.attr.senses.blindsight=30;}}}catch(err){_didIteratorError10=true;_iteratorError10=err;}finally{try{if(!_iteratorNormalCompletion10&&_iterator10.return){_iterator10.return();}}finally{if(_didIteratorError10){throw _iteratorError10;}}}};var parseDefensiveAbilities=function parseDefensiveAbilities(){stats.attr['defensive abilities']=stats.attr['defensive abilities'].split(', ');var _iteratorNormalCompletion11=true;var _didIteratorError11=false;var _iteratorError11=undefined;try{for(var _iterator11=stats.attr['defensive abilities'][Symbol.iterator](),_step11;!(_iteratorNormalCompletion11=(_step11=_iterator11.next()).done);_iteratorNormalCompletion11=true){var defensiveAbility=_step11.value;if(defensiveAbility.match(/Resist Ocean's Fury/i)){stats.traits.push({name:'Resist Ocean\'s Fury',description:'The '+stats.attr.nameNoPreWords.toLowerCase()+' has advantage on saving throws against spells of the water type.'});}}}catch(err){_didIteratorError11=true;_iteratorError11=err;}finally{try{if(!_iteratorNormalCompletion11&&_iterator11.return){_iterator11.return();}}finally{if(_didIteratorError11){throw _iteratorError11;}}}};var parseSpells=function parseSpells(){var match=stats.attr.spells.match(/CL (\d+)/);var matches=void 0;if(match&&match[1]){stats.attr.CL=parseInt(match[1],10);}var regex=/(0|0th|1st|2nd|3rd|4th|5th|6th|7th|8th|9th)(?:\s*(?:\(at will\)|\(\d+\/day\)))?(?:-)([\sA-Za-z,()']+)/g;stats.attr.spells=stats.attr.spells.replace(/D Domain spell; /g,'').replace(/D\s/g,' ').replace(/D,/g,',').replace(/\s\(DC\s\d+\)/g,'').replace(/ Domain .*/g,'').replace(/\*/g,'').replace(/ \(\d+\)/g,'').replace(/\s\(already cast\)/gi,'');stats.attr.spellsParsed={};while(matches=regex.exec(stats.attr.spells)){if(matches[1]&&matches[2]){stats.attr.spellsParsed[parseInt(matches[1],10)]=matches[2].trim();}}};var parseGear=function parseGear(type){if(stats.attr[type]){stats.attr[type]=stats.attr[type].replace(/, see page \d+/gi,'').replace(';','').split(', ');var _iteratorNormalCompletion12=true;var _didIteratorError12=false;var _iteratorError12=undefined;try{for(var _iterator12=stats.attr[type][Symbol.iterator](),_step12;!(_iteratorNormalCompletion12=(_step12=_iterator12.next()).done);_iteratorNormalCompletion12=true){var gear=_step12.value;gear.replace('armored kilt','padded').replace('quilted cloth','padded').replace('rosewood armor','leather').replace('hide shirt','hide').replace('leaf armor','hide').replace('parade armor','studded leather').replace('wooden','studded leather').replace('armored coat','chain shirt').replace('chain mail','breastplate').replace('breastplate (agile)','breastplate').replace('agile breastplate','breastplate').replace('banded mail','splint').replace('field plate','splint').replace('half-plate','plate').replace('half-plate (agile)','plate').replace('agile half-plate','plate').replace('full plate','plate').replace('hellknight plate','plate').replace('stonepplate','plate');}}catch(err){_didIteratorError12=true;_iteratorError12=err;}finally{try{if(!_iteratorNormalCompletion12&&_iterator12.return){_iterator12.return();}}finally{if(_didIteratorError12){throw _iteratorError12;}}}stats.traits.push({name:type,description:stats.attr[type].join(', ')});}};var parseCombatGear=function parseCombatGear(){parseGear('combat gear');};var parseOtherGear=function parseOtherGear(){parseGear('other gear');};var parseNormalGear=function parseNormalGear(){parseGear('gear');};var processSection=function processSection(){if(stats.attr.abilities)parseAbilities();if(stats.attr.alignment)parseAlignment();if(stats.attr.ac)parseArmorClass();if(stats.attr.hp)parseHp();if(stats.attr.fort)parseSavingThrows();if(stats.attr.speed)parseSpeed();if(stats.attr.skills)parseSkills();if(stats.attr.senses)parseSenses();if(stats.attr['racial modifiers'])parseRacialModifiers();if(stats.attr.reach)parseReach();if(stats.attr.dr)parseDR();if(stats.attr.resist)parseResist();if(stats.attr.immune)parseImmune();stats.attacks=[];if(stats.attr['special attacks'])parseSpecialAttacks();if(stats.attr.melee)parseMelee();if(stats.attr.ranged)parseRanged();if(stats.attr['during combat'])parseDuringCombat();if(stats.attr.morale)parseMorale();if(stats.attr.sq)parseSQ();if(stats.attr.feats)parseFeats();if(stats.attr['defensive abilities'])parseDefensiveAbilities();if(stats.attr.spells)parseSpells();if(stats.attr['combat gear'])parseCombatGear();if(stats.attr['other gear'])parseOtherGear();if(stats.attr.gear)parseNormalGear();};var findHighest=function findHighest(arr){var highestAbility=Math.max.apply(Math,_toConsumableArray(arr.map(function(ability){return ability.score;})));return arr.find(function(ability){return ability.score===highestAbility;});};var getHighestAbilityScores=function getHighestAbilityScores(abilities){var abilitiesArr=[];var _iteratorNormalCompletion13=true;var _didIteratorError13=false;var _iteratorError13=undefined;try{for(var _iterator13=abilities[Symbol.iterator](),_step13;!(_iteratorNormalCompletion13=(_step13=_iterator13.next()).done);_iteratorNormalCompletion13=true){var ability=_step13.value;abilitiesArr.push({name:ability,score:stats.attr.abilities[ability].score});}}catch(err){_didIteratorError13=true;_iteratorError13=err;}finally{try{if(!_iteratorNormalCompletion13&&_iterator13.return){_iterator13.return();}}finally{if(_didIteratorError13){throw _iteratorError13;}}}var highestAbilities=[];var highestAbilityObj=findHighest(abilitiesArr);highestAbilities.push(highestAbilityObj);abilitiesArr.splice(abilitiesArr.findIndex(function(ability){return ability.name===highestAbilityObj.name;}),1);if(abilitiesArr.length>0){var secondHighestAbilityObj=findHighest(abilitiesArr);highestAbilities.push(secondHighestAbilityObj);}return highestAbilities;};var getAverageOfHighestAbilityScoresForSavingThrow=function getAverageOfHighestAbilityScoresForSavingThrow(abilities){var obj={abilitiesUsed:[]};var sum=0;var highestAbilities=getHighestAbilityScores(abilities);var _iteratorNormalCompletion14=true;var _didIteratorError14=false;var _iteratorError14=undefined;try{for(var _iterator14=highestAbilities[Symbol.iterator](),_step14;!(_iteratorNormalCompletion14=(_step14=_iterator14.next()).done);_iteratorNormalCompletion14=true){var ability=_step14.value;obj.abilitiesUsed.push(ability.name);sum+=(ability.score-10)/2;}}catch(err){_didIteratorError14=true;_iteratorError14=err;}finally{try{if(!_iteratorNormalCompletion14&&_iterator14.return){_iterator14.return();}}finally{if(_didIteratorError14){throw _iteratorError14;}}}obj.avg=Math.floor(sum/obj.abilitiesUsed.length);return obj;};var convertSaves=function convertSaves(){var savesAbility={fortitude:'constitution',reflex:'dexterity',will:'wisdom'};var savesAbilityReverse={dexterity:'reflex',constitution:'fortitude',wisdom:'will'};var shortNames={fortitude:'fort',reflex:'ref',will:'will'};stats.saves={};if($scope.useCondensed){var savesMods={fortitude:getAverageOfHighestAbilityScoresForSavingThrow(['constitution']),reflex:getAverageOfHighestAbilityScoresForSavingThrow(['strength','dexterity']),will:getAverageOfHighestAbilityScoresForSavingThrow(['intelligence','wisdom','charisma'])};Object.keys(savesAbility).forEach(function(save){var originalAbilityMod=stats.attr.abilities[savesAbility[save]].originalMod;var originalMinusAbility=stats.attr.saves[save]-originalAbilityMod;stats.saves[shortNames[save]]=savesMods[save].avg;var goodSave=Math.floor(stats.attr.hdTotal/2)+2;if(originalMinusAbility>=goodSave){stats.saves[shortNames[save]]+=stats.attr.pb;}});}else{Object.keys(savesAbilityReverse).forEach(function(ability){var oldSavingThrow=savesAbilityReverse[ability];if(oldSavingThrow){var originalAbilityMod=stats.attr.abilities[ability].originalMod;var originalMinusAbility=stats.attr.saves[savesAbilityReverse[ability]]-originalAbilityMod;var goodSave=Math.floor(stats.attr.hdTotal/2)+2;if(originalMinusAbility>=goodSave){stats.saves[ability.substring(0,3)]=originalAbilityMod+stats.attr.pb;}}});}if(Object.keys(stats.saves).length===0){delete stats.saves;}};var averageCR=function averageCR(){var averageOfCRs=(stats.attr.cr.offensive+stats.attr.cr.defensive)/2+0.001;stats.attr.cr.cr=parseFloat($filter('closestValueInArray')(sharedProp.crList,averageOfCRs));};var makeCRReadable=function makeCRReadable(){stats.attr.cr.display=stats.attr.cr.cr;if(stats.attr.cr.cr<1){stats.attr.cr.display=new Fraction(stats.attr.cr.cr).toString();}};var setXP=function setXP(){var crToXP={0:10,0.125:25,0.25:50,0.5:100,1:200,2:450,3:700,4:1100,5:1800,6:2300,7:2900,8:3900,9:5000,10:5900,11:7200,12:8400,13:10000,14:11500,15:13000,16:15000,17:18000,18:20000,19:22000,20:25000,21:33000,22:41000,23:50000,24:62000,25:75000,26:90000,27:105000,28:120000,29:135000,30:155000};if(crToXP[stats.attr.cr.cr]){stats.attr.xp=crToXP[stats.attr.cr.cr];}};var processCR=function processCR(){averageCR();makeCRReadable();setXP();};var convertCR=function convertCR(){var oldCR=parseFloat(stats.attr.cr,10);delete stats.attr.cr;stats.attr.cr={};stats.attr.cr.cr=oldCR;stats.attr.cr.defensive=stats.attr.cr.cr;stats.attr.cr.offensive=stats.attr.cr.cr;processCR();};var calcPB=function calcPB(){stats.attr.pb=2+Math.floor(Math.abs((stats.attr.cr.cr-1)/4));};var convertAbilities=function convertAbilities(){var highestCastingStat=Math.max(stats.attr.abilities.intelligence.mod,stats.attr.abilities.wisdom.mod,stats.attr.abilities.charisma.mod);if(stats.attr.abilities.wisdom.mod===highestCastingStat){stats.attr.castingStat='wisdom';}else if(stats.attr.abilities.charisma.mod===highestCastingStat){stats.attr.castingStat='charisma';}else{stats.attr.castingStat='intelligence';}};var convertSize=function convertSize(){if(stats.attr.size==='tine'||stats.attr.size==='diminutive'){stats.attr.size='tiny';}if(stats.attr.size==='colossal'){stats.attr.size='gargantuan';}};var convertType=function convertType(){stats.attr.type=stats.attr.type.replace('animal','beast').replace('vermin','beast').replace('magical beast','monstrosity').replace('monstrous humanoid','monstrosity').replace('outsider','elemental, aberration, construct, celestial, or fiend');};var convertAlignment=function convertAlignment(){if((stats.attr.type.includes('beast')||stats.attr.type.includes('plant')||stats.attr.type.includes('ooze'))&&stats.attr.alignment==='neutral'){stats.attr.alignment='unaligned';}};var convertAC=function convertAC(){var armors=[{name:'padded',type:'light',baseAC:11},{name:'leather',type:'light',baseAC:11},{name:'studded leather',type:'light',baseAC:12},{name:'hide',type:'medium',baseAC:12},{name:'chain shirt',type:'medium',baseAC:13},{name:'scale mail',type:'medium',baseAC:14},{name:'breastplate',type:'medium',baseAC:14},{name:'half plate',type:'medium',baseAC:15},{name:'ring mail',type:'heavy',baseAC:14},{name:'chain mail',type:'heavy',baseAC:16},{name:'splint',type:'heavy',baseAC:17},{name:'plate',type:'heavy',baseAC:18}];var armor=void 0;if(stats.attr['other gear']){armor=stats.attr['other gear'][0];}if(stats.attr.gear){armor=stats.attr.gear[0];}if(armor){armor=armor.replace(' armor','').replace(/\+\d+ /g,'').replace('mithral ','').replace('adamantine ','');if(stats.attr.abilities.dexterity.mod>=4){if(armor&&armor.indexOf('chain shirt')>-1){armor='studded leather';}}if(stats.attr.abilities.dexterity.mod>=5){if(armor&&(armor.indexOf('breastplate')>-1||armor.indexOf('half plate')>-1)){armor='studded leather';}}}var armorFromList=$filter('getByName')(armors,armor);if(armorFromList){stats.attr.ac.note=armorFromList.name;stats.attr.ac.ac=armorFromList.baseAC;if(armorFromList.type==='light'){stats.attr.ac.ac+=stats.attr.abilities.dexterity.mod;}else if(armorFromList.type==='medium'){stats.attr.ac.ac+=Math.min(stats.attr.abilities.dexterity.mod,2);}}else{stats.attr.ac.ac=10+stats.attr.abilities.dexterity.mod;if(stats.attr.ac.shield){stats.attr.ac.ac+=2;}var ACBonuses=0;if(stats.attr.ac.dodge){ACBonuses+=stats.attr.ac.dodge;}if(stats.attr.ac.armor){ACBonuses+=stats.attr.ac.armor*0.8;}if(stats.attr.ac.natural){ACBonuses+=stats.attr.ac.natural*0.7;stats.attr.ac.note='natural armor';}if(stats.attr.ac.profane){ACBonuses+=stats.attr.ac.profane;}var acSize=0;if(stats.attr.ac.size&&Math.abs(stats.attr.ac.size)>1){if(stats.attr.ac.size>1){acSize=Math.floor(stats.attr.ac.size/2);}else{acSize=Math.ceil(stats.attr.ac.size/2);}}stats.attr.ac.ac+=Math.round(ACBonuses*0.6)+acSize;}};var calculateAverage=function calculateAverage(dice,die,bonus){return Math.floor((die/2+0.5)*dice)+(parseInt(bonus,10)||0);};var convertHP=function convertHP(){var hpAverage=0;for(var key in stats.attr.hd){if(stats.attr.hd.hasOwnProperty(key)){hpAverage+=(key/2+0.5)*stats.attr.hd[key];}}stats.attr.hpFromCon=sumOfObj(stats.attr.hd)*stats.attr.abilities.constitution.mod;hpAverage+=stats.attr.hpFromCon;stats.attr.hpAverage=Math.floor(hpAverage);};var adjustToNewCR=function adjustToNewCR(){var getKeysByValue=function getKeysByValue(obj,property,value){var keys=[];for(var key in obj){if(obj.hasOwnProperty(key)){if(obj[key][property]===value){keys.push(key);}}}return keys;};var arrayOfHPPerCR=$filter('objToArrayOfValues')(sharedProp.statsByCR,'averageHP');var roundedToClosestHP=$filter('closestValueInArray')(arrayOfHPPerCR,stats.attr.hpAverage);var hpCR=parseFloat(getKeysByValue(sharedProp.statsByCR,'averageHP',roundedToClosestHP));var arrayOfACPerCR=$filter('objToArrayOfValues')(sharedProp.statsByCR,'ac');var roundedToClosestAC=$filter('closestValueInArray')(arrayOfACPerCR,stats.attr.ac.ac);var acCRs=getKeysByValue(sharedProp.statsByCR,'ac',roundedToClosestAC);var acCRLowest=Math.min.apply(null,acCRs);var acCRHighest=Math.max.apply(null,acCRs);var arrayOfDamagePerCR=$filter('objToArrayOfValues')(sharedProp.statsByCR,'damagePerRound');var roundedToClosestDmgPerRound=$filter('closestValueInArray')(arrayOfDamagePerCR,stats.attr.dmgPerRound);var damageCR=parseFloat(getKeysByValue(sharedProp.statsByCR,'damagePerRound',roundedToClosestDmgPerRound));var arrayOfAttackPerCR=$filter('objToArrayOfValues')(sharedProp.statsByCR,'toHit');var highestToHit=stats.attr.pb+Math.max(stats.attr.abilities.strength.mod,stats.attr.abilities.dexterity.mod);var roundedToClosestToHit=$filter('closestValueInArray')(arrayOfAttackPerCR,highestToHit);var toHitCRs=getKeysByValue(sharedProp.statsByCR,'toHit',roundedToClosestToHit);var toHitCRLowest=Math.min.apply(null,toHitCRs);var toHitCRHighest=Math.max.apply(null,toHitCRs);if(acCRHighest<hpCR){stats.attr.cr.defensive=Math.round(hpCR*0.75+acCRHighest*0.25);}else if(acCRLowest>hpCR){stats.attr.cr.defensive=Math.round(hpCR*0.75+acCRLowest*0.25);}else{stats.attr.cr.defensive=hpCR;}if(toHitCRHighest<damageCR){stats.attr.cr.offensiveMartial=Math.round(damageCR*0.75+toHitCRHighest*0.25);}else if(toHitCRLowest>damageCR){stats.attr.cr.offensiveMartial=Math.round(damageCR*0.75+toHitCRLowest*0.25);}else{stats.attr.cr.offensiveMartial=damageCR;}if(stats.attr.CL){stats.attr.cr.offensiveSpell=stats.attr.CL;var CRDifference=Math.abs(stats.attr.cr.offensiveSpell-stats.attr.cr.offensiveMartial);if(CRDifference>2){stats.attr.cr.offensive=Math.max(stats.attr.cr.offensiveSpell,stats.attr.cr.offensiveMartial);}else{stats.attr.cr.offensive=Math.round(stats.attr.cr.offensiveSpell*0.5+stats.attr.cr.offensiveMartial*0.5);}}else{stats.attr.cr.offensive=stats.attr.cr.offensiveMartial;}console.info('CRs',stats.attr.cr);processCR();};var convertSkillNames=function convertSkillNames(){if($scope.useCondensed){sharedProp.oldSkillToNew.bluff='influence';sharedProp.oldSkillToNew.diplomacy='influence';sharedProp.oldSkillToNew.intimidate='influence';sharedProp.oldSkillToNew['craft (alchemy)']='nature';sharedProp.oldSkillToNew['craft (traps)']='sleight of hand';sharedProp.oldSkillToNew['craft (trapmaking)']='sleight of hand';sharedProp.oldSkillToNew['disable device']='sleight of hand';sharedProp.oldSkillToNew['escape artist']='acrobatics';sharedProp.oldSkillToNew.disguise='performance';sharedProp.oldSkillToNew['handle animal']='nature';sharedProp.oldSkillToNew.heal='nature';sharedProp.oldSkillToNew['knowledge (history)']='society';sharedProp.oldSkillToNew['knowledge (local)']='society';sharedProp.oldSkillToNew['knowledge (nobility)']='society';sharedProp.oldSkillToNew.linguistics='society';sharedProp.oldSkillToNew.ride='acrobatics';sharedProp.oldSkillToNew.survival='nature';sharedProp.skillAbility.influence='charisma';sharedProp.skillAbility.society='intelligence';}for(var key in stats.attr.skills){if(stats.attr.skills.hasOwnProperty(key)){var oldSkillValue=stats.attr.skills[key];var newSkill=sharedProp.oldSkillToNew[key];delete stats.attr.skills[key];if(newSkill){if(stats.attr.skills[newSkill]){stats.attr.skills[newSkill]+=oldSkillValue;}else{stats.attr.skills[newSkill]=oldSkillValue;}}}}};var setSkillsToAbilityValues=function setSkillsToAbilityValues(){stats.skills={};for(var key in stats.attr.skills){if(stats.attr.skills.hasOwnProperty(key)){var abilityMod=stats.attr.abilities[sharedProp.skillAbility[key]].mod;var expertise=stats.attr.pb*2;var totalSkillBonus=(stats.attr.skills[key]-abilityMod)/2;stats.skills[key]={ability:sharedProp.skillAbility[key]};if(totalSkillBonus>=expertise){stats.skills[key].proficiency='expertise';}else if(totalSkillBonus>=stats.attr.pb){stats.skills[key].proficiency='proficient';}else{delete stats.skills[key];}}}if(Object.keys(stats.skills).length){stats.skills=$filter('orderObjectByKey')(stats.skills);}else{delete stats.skills;}};var convertSkills=function convertSkills(){convertSkillNames();setSkillsToAbilityValues();};var convertSenses=function convertSenses(){if(stats.attr.senses.scent){stats.traits.push({name:'keen smell',description:'The '+stats.attr.nameNoPreWords.toLowerCase()+' has advantage on Wisdom (Perception) checks that rely on smell'});delete stats.attr.senses.scent;}if(stats.attr.senses['low-light vision']){delete stats.attr.senses['low-light vision'];}if(stats.skills&&stats.skills.perception){stats.attr.passivePerception=10+stats.skills.perception;}else{stats.attr.passivePerception=10+stats.attr.abilities.wisdom.mod;}};var createSaveDCs=function createSaveDCs(){stats.attr.saveDC=13+Math.floor(stats.attr.cr.cr*0.34);stats.attr.spellsToHit={strength:stats.attr.pb+stats.attr.abilities.strength.mod,dexterity:stats.attr.pb+stats.attr.abilities.dexterity.mod,constitution:stats.attr.pb+stats.attr.abilities.constitution.mod,intelligence:stats.attr.pb+stats.attr.abilities.intelligence.mod,wisdom:stats.attr.pb+stats.attr.abilities.wisdom.mod,charisma:stats.attr.pb+stats.attr.abilities.charisma.mod};stats.attr.saveDCs={strength:8+stats.attr.pb+stats.attr.abilities.strength.mod,dexterity:8+stats.attr.pb+stats.attr.abilities.dexterity.mod,constitution:8+stats.attr.pb+stats.attr.abilities.constitution.mod,intelligence:8+stats.attr.pb+stats.attr.abilities.intelligence.mod,wisdom:8+stats.attr.pb+stats.attr.abilities.wisdom.mod,charisma:8+stats.attr.pb+stats.attr.abilities.charisma.mod};};var convertAttacks=function convertAttacks(){var finesseAttackStat=Math.max(stats.attr.abilities.strength.mod,stats.attr.abilities.dexterity.mod);var strengthAttackStat=stats.attr.abilities.strength.mod;var rangedAttackStat=stats.attr.abilities.dexterity.mod;for(var key=0;key<stats.attacks.length;key+=1){var attack=stats.attacks[key];attack.name=attack.name.replace('masterwork ','').replace('mwk ','').replace('battle aspergillum','mace').replace('aspergillum','mace').replace('brass knuckles','light hammer').replace('cestus','dagger').replace('punching dagger','dagger').replace('spiked gauntlet','dagger').replace('hook hand','dagger').replace('kunai','dagger').replace('light mace','mace').replace('wooden stake','dagger').replace('heavy mace','warhammer').replace('shortspear','spear').replace('boarding pike','pike').replace('kumade','quarterstaff').replace('longspear','spear').replace('boar spear','spear').replace('weighted spear','spear').replace('stingchuck','dart').replace('stonebow','shortbow').replace('boarding axe','handaxe').replace('throwing axe','handaxe').replace('blade boot','dagger').replace('Cat-o\'-nine-tails','whip').replace('dogslicer','scimitar').replace('gladius','shortsword').replace('kukri','shortsword').replace('machete','shortsword').replace('light pick','war pick').replace('sap','club').replace('starknife','dagger').replace('short sword','shortsword').replace('war razor','dagger').replace('ankus','mace').replace('cutlass','scimitar').replace('gandasa','battleaxe').replace('manople','longsword').replace('heavy pick','war pick').replace('scizore ','rapier').replace('sword cane','shortsword').replace('terbutje','longsword').replace('steel terbutje','longsword').replace('bardiche','halberd').replace('bec de corbin','pike').replace('bill','glaive').replace('earth breaker','maul').replace('falchion','greatsword').replace('heavy flail','flail').replace('glaive-guisarme','glaive').replace('guisarme','glaive').replace('lucerne hammer','maul').replace('horsechopper','halberd').replace('ogre hook','halberd').replace('pickaxe','war pick').replace('planson','pike').replace('ranseur','pike').replace('scythe','halberd').replace('ammentum','javelin').replace('charkram','javelin').replace('hunga munga','shortsword').replace('hurlbat','javelin').replace('composite ','').replace('short bow','shortbow').replace('pilum','javelin').replace('spear-sling','javelin').replace('aklys','light hammer').replace('knuckle axe','handaxe').replace('barbazu beard','dagger').replace('swordbreaker dagger','dagger').replace('flying talon','dagger').replace('gnome pincher','shortsword').replace('halfling rope-shot','mace').replace('dwarven boulder helmet','light hammer').replace('kama','shortsword').replace('katar','shortsword').replace('tri-bladed katar','shortsword').replace('butterfly knife','dagger').replace('deer horn knife','dagger').replace('dwarven maulaxe','mace').replace('nunchaku','quarterstaff').replace('quadrens','shortsword').replace('rope gauntlet','light hammer').replace('sai','light hammer').replace('siangham','shortsword').replace('sica','shortsword').replace('thorn bracer','shortsword').replace('scorpion whip','whip').replace('hooked axe','battleaxe').replace('estoc','longsword').replace('falcata','longsword').replace('flindbar','longsword').replace('khopesh','longsword').replace('knobkerrie','mace').replace('rhoka','longsword').replace('sawtooth sabre','longsword').replace('shotel','rapier').replace('dueling sword','rapier').replace('bastard sword','longsword').replace('tongi','shortsword').replace('dwarven waraxe','battleaxe').replace('crook','light hammer').replace('elven curve blade','rapier').replace('dwarven dorn dergar','warhammer').replace('elven branched spear','glaive').replace('fauchard','halberd').replace('flailpole','glaive').replace('flying blade','greatsword').replace('garrote','shortsword').replace('harpoon','trident').replace('dwarven longaxe','halberd').replace('dwarven longhammer','halberd').replace('snag net','net').replace('orc skull ram','halberd').replace('piston maul','maul').replace('ripsaw glaive','glaive').replace('bladed scarf','shortsword').replace('totem spear','pike').replace('bola','javelin').replace('brutal bola','javelin').replace('boomerang','javelin').replace('double crossbow','light crossbow').replace('shrillshaft javelin','javelin').replace('shuriken','dart').replace('double sling','sling').replace('sling glove','sling').replace('stitched sling','sling');var attackNameAlreadyExists=$filter('getByName')(stats.attacks.slice(0,key),attack.name);if(attackNameAlreadyExists){if(attack.addToMultiattack==='and'){if(attackNameAlreadyExists.number){attackNameAlreadyExists.number+=1;}else{attackNameAlreadyExists.number=2;}}stats.attacks.splice(key,1);key-=1;continue;}if(!attack.target){attack.target='one target';}var wepFromList=$filter('getByName')(sharedProp.weapons,attack.name);if(wepFromList){attack.range=wepFromList.range;attack.damageDice=wepFromList.damageDice;attack.damageDie=wepFromList.damageDie;attack.damageType=wepFromList.damageType;if(wepFromList.finesse){attack.toHit=finesseAttackStat;attack.damageBonus=finesseAttackStat;}else if(!wepFromList.range||wepFromList.thrown){attack.toHit=strengthAttackStat;attack.damageBonus=strengthAttackStat;}else{attack.toHit=rangedAttackStat;attack.damageBonus=rangedAttackStat;}if(wepFromList.thrown){attack.thrown=true;}if(stats.attr.size==='large'){attack.damageDice+=1;}else if(stats.attr.size==='huge'){attack.damageDice+=2;}else if(stats.attr.size==='gargantuan'){attack.damageDice+=3;}}else{if(attack.name==='savage bite'){attack.target='one grappled target';}if(attack.type==='melee'){attack.toHit=finesseAttackStat;attack.damageBonus=finesseAttackStat;}else{attack.toHit=rangedAttackStat;attack.damageBonus=rangedAttackStat;}if(stats.attr.size==='medium'||stats.attr.size==='large'||stats.attr.size==='huge'||stats.attr.size==='gargantuan'){attack.damageDice+=1;}if(attack.number>3){attack.number=Math.floor(attack.number/2);attack.damageDice+=attack.damageDice;}if(attack.name.match(/(bite|gore|sting)/)){attack.damageType='piercing';}else if(attack.name.match(/(claw|talon)/)){attack.damageType='slashing';}else if(attack.name.match(/(hoof|tentacle|pincer|pseudopod|slam|tail|wing)/)){attack.damageType='bludgeoning';}else if(attack.name.match(/(bomb)/)){attack.damageType='fire';}else{attack.damageType='slashing';}if(attack.damageDie<4){attack.damageDie=4;}}attack.averageDamage=calculateAverage(attack.damageDice,attack.damageDie,attack.damageBonus);if(attack.secondaryDamageDie){attack.averageSecondaryDamage=calculateAverage(attack.secondaryDamageDice,attack.secondaryDamageDie,attack.secondaryDamageBonus);}}};var checkForMultiattack=function checkForMultiattack(){stats.multiattack={allAreOr:false,attacks:$filter('hasProp')(stats.attacks,'addToMultiattack'),numOfMultiattackAttacks:$filter('countByHasProp')(stats.attacks,'addToMultiattack'),totalAttacks:0};stats.multiattack.allAreOr=$filter('countByPropEqual')(stats.attacks,'addToMultiattack','or')===stats.multiattack.numOfMultiattackAttacks;for(var key=0;key<stats.multiattack.attacks.length;key+=1){var attack=stats.multiattack.attacks[key];if(attack.addToMultiattack==='and'){stats.multiattack.totalAttacks+=attack.number||1;}else if(attack.type==='ranged'&&attack.addToMultiattack==='or'){stats.multiattack.numOfMultiattackAttacks-=attack.number;}else if(attack.number>1){stats.multiattack.totalAttacks+=attack.number;}else if(stats.multiattack.allAreOr&&attack.addToMultiattack==='or'&&(!attack.number||attack.number<2)){stats.multiattack.attacks.splice(key,1);stats.multiattack.numOfMultiattackAttacks-=attack.number;key-=1;continue;}}};var calculateDmgPerRound=function calculateDmgPerRound(){var damagePerRound=0;var orAttacks=[];for(var key in stats.attacks){if(stats.attacks.hasOwnProperty(key)){var attack=stats.attacks[key];var totalDamageForAttack=(attack.averageDamage+(attack.averageSecondaryDamage||0))*(attack.number||1);if(!attack.addToMultiattack||attack.addToMultiattack==='or'){orAttacks.push(totalDamageForAttack);}else{damagePerRound+=totalDamageForAttack;}}}if(orAttacks.length>0){damagePerRound+=Math.max.apply(null,orAttacks);}console.info('damagePerRound',damagePerRound);stats.attr.dmgPerRound=damagePerRound;};var convertSpecialAttacks=function convertSpecialAttacks(){var specialAttacksVar=stats.attr['special attacks']||stats.attr['special attack'];stats.attr['special attacks']=specialAttacksVar;var _iteratorNormalCompletion15=true;var _didIteratorError15=false;var _iteratorError15=undefined;try{for(var _iterator15=stats.attr['special attacks'][Symbol.iterator](),_step15;!(_iteratorNormalCompletion15=(_step15=_iterator15.next()).done);_iteratorNormalCompletion15=true){var specialAttack=_step15.value;specialAttack=specialAttack.toLowerCase();if(specialAttack.includes('sneak stab')||specialAttack.includes('sneak attack')){var regex=/(\d+)d(\d+)/gi;var match=regex.exec(specialAttack);var damageDice=void 0;var averageDamage=void 0;if(match){damageDice=match[1];averageDamage=calculateAverage(damageDice,6,0);}stats.traits.push({name:'Sneak Attack (1/Turn)',description:'The '+stats.attr.nameNoPreWords.toLowerCase()+' deals an extra '+averageDamage+' ('+damageDice+'d6) damage when it hits a target with a weapon attack and has advantage on the attack roll, or when the target is within 5 feet of an ally of the '+stats.attr.nameNoPreWords.toLowerCase()+' that isn\'t incapacitated and the '+stats.attr.nameNoPreWords.toLowerCase()+' doesn\'t have disadvantage on the attack roll'});}else if(specialAttack.includes('swallow whole')){var targetSize=sharedProp.sizes[sharedProp.sizes.indexOf(stats.attr.size)-1];var _regex=/(\d+)d(\d+)((?:-|\+)\d+)?/gi;var _match=_regex.exec(specialAttack);var _averageDamage=calculateAverage(_match[1],6,_match[3]);var _damageDice=Math.floor(_averageDamage/3.5);stats.actions.push({name:'swallow',description:'The '+stats.attr.nameNoPreWords.toLowerCase()+' makes one bite attack against a '+targetSize+' or smaller target it is grappling. If the attack hits, the target is swallowed, and the grapple ends. The swallowed target is blinded and restrained, it has total cover against attacks and other effects outside the '+stats.attr.nameNoPreWords.toLowerCase()+', and it takes '+_averageDamage+' ('+_damageDice+'d6) acid damage at the start of each of the '+stats.attr.nameNoPreWords.toLowerCase()+'\'s turns. The '+stats.attr.nameNoPreWords.toLowerCase()+' can have only one target swallowed at a time. <br>&nbsp;&nbsp;&nbsp;&nbsp;If the '+stats.attr.nameNoPreWords.toLowerCase()+' dies, a swallowed creature is no longer restrained by it and can escape from the corpse using 5 feet of movement, exiting prone'});}else if(specialAttack.includes('tangling tentacles')){stats.traits.push({name:'tangling tentacles',description:'The '+stats.attr.nameNoPreWords.toLowerCase()+'\'s wriggling legs constantly writhe and reach out to tug at and trip adjacent foes. During the '+stats.attr.nameNoPreWords.toLowerCase()+'\'s turn, when it makes a melee attack it can first make a special melee attack to shove an adjacent foe'});}else if(specialAttack.includes('gnaw')){stats.traits.push({name:'gnaw',description:'The '+stats.attr.nameNoPreWords.toLowerCase()+' possesses a second set of jaws in its throat that aid in swallowing\u2014it can make another bite attack against a grappled opponent'});}else if(specialAttack.includes('thrash')){stats.attacks.push({addToMultiattack:'or',damageDice:4,damageDie:8,damageType:'slashing',name:'Thrash',special:'The grappled creature can attempt to escape the grapple. If it escapes, it is thrown 30 feet in a random direction by the zeuglodon\'s erratic thrashing',target:'one grappled target',type:'melee'});}}}catch(err){_didIteratorError15=true;_iteratorError15=err;}finally{try{if(!_iteratorNormalCompletion15&&_iterator15.return){_iterator15.return();}}finally{if(_didIteratorError15){throw _iteratorError15;}}}};var convertSpecialAttacksAfterCR=function convertSpecialAttacksAfterCR(){var specialAttacksVar=stats.attr['special attacks']||stats.attr['special attack'];stats.attr['special attacks']=specialAttacksVar;var _iteratorNormalCompletion16=true;var _didIteratorError16=false;var _iteratorError16=undefined;try{for(var _iterator16=stats.attr['special attacks'][Symbol.iterator](),_step16;!(_iteratorNormalCompletion16=(_step16=_iterator16.next()).done);_iteratorNormalCompletion16=true){var specialAttack=_step16.value;specialAttack=specialAttack.toLowerCase();if(specialAttack.includes('unholy blood')){stats.actions.push({name:'unholy blood',recharge:'recharges after a short or long rest',description:'A 20-foot radius cloud of Fiendish blood extends all around the '+stats.attr.nameNoPreWords.toLowerCase()+'. The area is heavily obscured for 1 minute for everything but the '+stats.attr.nameNoPreWords.toLowerCase()+' (which can see through the blood with ease), although a significant current can disperse the blood. After releasing the blood, the '+stats.attr.nameNoPreWords.toLowerCase()+' can use the Dash action as a bonus action. On land the slippery blood coats the ground, making the area difficult terrain. Anyone who enters a cloud of the blood in the water or who is within the area of a burst of blood on land must make a DC '+stats.attr.saveDCs.constitution+' Constitution saving throw or be incapacitated for 1d4 rounds\u2014this save need be made only once per cloud. A creature incapacitated by this can make a new save at the end of each of his turns'});}else if(specialAttack.includes('trample')){stats.traits.push({name:'Trampling Charge',description:'If the '+stats.attr.nameNoPreWords.toLowerCase()+' moves at least 20 feet straight toward a creature and then hits it with a gore attack on the same target, that target must succeed on a DC '+stats.attr.saveDCs.strength+' Strength saving throw or be knocked prone. If the target is prone, the '+stats.attr.nameNoPreWords.toLowerCase()+' can make one stomp attack against it as a bonus action'});}}}catch(err){_didIteratorError16=true;_iteratorError16=err;}finally{try{if(!_iteratorNormalCompletion16&&_iterator16.return){_iterator16.return();}}finally{if(_didIteratorError16){throw _iteratorError16;}}}};var addTraits=function addTraits(){if(stats.attr.name.includes('Megalodon')){stats.traits.push({name:'Blood Frenzy',description:'The shark has advantage on melee attack rolls against any creature that doesn\'t have all its hit points'});}if(stats.attr.type.match(/aquatic/i)){var amphibious=$filter('getByName')(stats.traits,'amphibious');if(!amphibious){stats.traits.push({name:'water breathing',description:'The '+stats.attr.nameNoPreWords.toLowerCase()+' can breathe only underwater'});if(stats.attr.nameNoPreWords.match(/octopus|squid|devilfish/i)){stats.traits.push({name:'underwater camouflage',description:'The '+stats.attr.nameNoPreWords.toLowerCase()+' has advantage on Dexterity (Stealth) checks made while underwater'});}}}};var convertSpells=function convertSpells(){stats.spells={0:{spells:[]},1:{spells:[]},2:{spells:[]},3:{spells:[]},4:{spells:[]},5:{spells:[]},6:{spells:[]},7:{spells:[]},8:{spells:[]},9:{spells:[]}};for(var key in stats.attr.spellsParsed){if(stats.attr.spellsParsed.hasOwnProperty(key)){var spellsPerLevel=stats.attr.spellsParsed[key].split(', ');for(var i=0;i<spellsPerLevel.length;i+=1){var spellName=sharedProp.oldSpellToNew[spellsPerLevel[i]]||spellsPerLevel[i];var spell=$filter('getByName')(sharedProp.spells,spellName);if(spell){if(stats.spells[spell.level].spells.indexOf(spell.name)===-1){stats.spells[spell.level].spells.push(spell.name);}}}}}for(var _key2 in stats.spells){if(stats.spells.hasOwnProperty(_key2)){if(stats.spells[_key2].spells.length>0){stats.spells[_key2].spells=stats.spells[_key2].spells.sort();}if(_key2>0){var spellSlotsPerLevel=sharedProp.spellSlotsByCL[stats.attr.CL][_key2];if(spellSlotsPerLevel){stats.spells[_key2].slots=spellSlotsPerLevel;}}}}};var convertToFifth=function convertToFifth(){convertAbilities();convertSize();convertType();convertAlignment();convertAC();if(stats.attr['special attacks'])convertSpecialAttacks();convertAttacks();checkForMultiattack();calculateDmgPerRound();if(stats.attr.spellsParsed)convertSpells();addTraits();convertCR();calcPB();convertHP();adjustToNewCR();calcPB();if(stats.attr.saves)convertSaves();if(stats.attr.skills)convertSkills();if(stats.attr.senses)convertSenses();createSaveDCs();if(stats.attr['special attacks'])convertSpecialAttacksAfterCR();};$scope.parseStats=function(){$scope.error=null;$scope.converting=true;$scope.pfStats=clean($scope.pfStats);var text=process($scope.pfStats);stats=splitStatblock(text,findKeyword(text));processSection();convertToFifth();console.info('stats',stats);$scope.stats=stats;$scope.converting=false;};$scope.parseStats();}]);